{
  "name": "tslens",
  "displayName": "TSLens",
  "icon": "logo.png",
  "description": "Adds reference code lenses, highlights, gutters for Typescripts interfaces/classes methods/fields implementations, overrides and inheritance",
  "version": "1.2.9",
  "publisher": "MaxGotovkin",
  "author": "MaxGotovkin",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/BrainMaxx/tslens.git"
  },
  "engines": {
    "vscode": "^1.1.21"
  },
  "keywords": [
    "references",
    "inheritance",
    "overrides",
    "typescript"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/src/extension",
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "contributes": {
    "commands": [
      {
        "command": "tslens.update",
        "title": "TSLens: Update"
      },
      {
        "command": "tslens.showOverrides",
        "title": "TSLens: Show override candidates"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "TSLens configuration",
      "properties": {
        "tslens.showReferences": {
          "default": true,
          "description": "A flag which indicates whether the references infos should be shown",
          "type": "boolean"
        },
        "tslens.showBaseMemberInfo": {
          "default": true,
          "description": "A flag which indicates whether the inheritance infos should be shown",
          "type": "boolean"
        },
        "tslens.excludeself": {
          "default": true,
          "description": "A flag which indicates whether the initiating reference should be excluded",
          "type": "boolean"
        },
        "tslens.blackbox": {
          "description": "Array of glob patterns for blackboxed resources",
          "type": "array",
          "default": []
        },
        "tslens.decorateunused": {
          "default": true,
          "description": "A flag which indicates whether the initiating reference should be decorated if it is unsed",
          "type": "boolean"
        },
        "tslens.basePreviewOnHover": {
          "default": false,
          "description": "A flag which indicates whether the base method should be shown on method hover",
          "type": "boolean"
        },
        "tslens.singular": {
          "default": "{0} reference",
          "description": "Localization for the singular case",
          "type": "string"
        },
        "tslens.blackboxTitle": {
          "default": "<< called from blackbox >>",
          "description": "Localization for the case where the only usages are from blackboxed sources",
          "type": "string"
        },
        "tslens.plural": {
          "default": "{0} references",
          "description": "Localization for the plural case",
          "type": "string"
        },
        "tslens.noreferences": {
          "default": "no references found for {0}",
          "description": "Localization for the case when there are no references found",
          "type": "string"
        },
        "tslens.unusedcolor": {
          "default": "#999",
          "description": "Color for unused references",
          "type": "string"
        },
        "tslens.methodOverrideColor": {
          "default": "rgba(209,0,0,0.35)",
          "description": "Color for method override",
          "type": "string"
        },
        "tslens.fieldOverrideColor": {
          "default": "rgba(0, 123, 168, 0.35)",
          "description": "Color for field override",
          "type": "string"
        },
        "tslens.interfaceImplementationColor": {
          "default": "rgba(144, 192, 2, 0.35)",
          "description": "Color for interface implementation",
          "type": "string"
        },
        "tslens.referencesTypes": {
          "default": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25
          ],
          "description": "Types of symbol (from SymbolKind enum) that should be analyzed for references",
          "type": "array"
        }
      }
    }
  },
  "devDependencies": {
    "typescript": "2.9.1",
    "@types/minimatch": "^3.0.1",
    "@types/node": "10.3.2",
    "@types/linq": "2.2.33"
  },
  "dependencies": {
    "vscode": "^1.1.21",
    "minimatch": "^3.0.4",
    "ts-simple-ast": "^16.0.2",
    "linq": "3.1.0"
  }
}
